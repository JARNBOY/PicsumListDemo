//
//  FullImageViewController.swift
//  PicsumListDemo
//
//  Created by Papon Supamongkonchai on 18/5/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol FullImageDisplayLogic: AnyObject
{
    func displayGetImageDetail(viewModel: FullImage.GetDetailDisplay.ViewModel)
}

class FullImageViewController: UIViewController, FullImageDisplayLogic
{
    
    @IBOutlet weak var webView: WKWebView!
    
    var interactor: FullImageBusinessLogic?
    var router: (NSObjectProtocol & FullImageRoutingLogic & FullImageDataPassing)?
    
    // MARK: Object lifecycle
    override func awakeFromNib() {
        super.awakeFromNib()
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = FullImageInteractor()
        let presenter = FullImagePresenter()
        let router = FullImageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getImageDetailURL()
    }

    // MARK: Function
    func getImageDetailURL()
    {
        interactor?.getImageDetail()
    }
    
    // MARK: FullImageDisplayLogic
    func displayGetImageDetail(viewModel: FullImage.GetDetailDisplay.ViewModel) {
        let link = URL(string:viewModel.url)!
        let request = URLRequest(url: link)
        webView.load(request)
    }
}
