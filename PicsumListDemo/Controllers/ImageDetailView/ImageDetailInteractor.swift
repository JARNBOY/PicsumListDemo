//
//  ImageDetailInteractor.swift
//  PicsumListDemo
//
//  Created by Papon Supamongkonchai on 24/4/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ImageDetailBusinessLogic
{
    func getImageDetail() async
    func getBlurImage(blur: Double) async
    func getGrayScaleImage() async
}

protocol ImageDetailDataStore
{
    var imageDetailInfo: ImageDetailInfo? { get set }
}

class ImageDetailInteractor: ImageDetailBusinessLogic, ImageDetailDataStore
{
    
    
    var presenter: ImageDetailPresentationLogic?
    var worker: ImageDetailWorker = ImageDetailWorker(service: ImageDetailService())
    
    var imageDetailInfo: ImageDetailInfo? = nil
    
    // MARK: ImageDetailBusinessLogic
    
    func getImageDetail() async {
        if let request = imageDetailInfo {
            do {
                let detailDisplayModel = try await worker.loadImageDetailInfo(id: request.idImageDetail)
                let response = ImageDetail.GetDetailDisplay.Response(imageData: request.dataImageDetail, displayModel: detailDisplayModel)
                self.presenter?.presentGetImageDetail(response: response)
            } catch {
                print(error.localizedDescription) // Output: "My error message"
            }
        }
    }
    
    func getBlurImage(blur: Double) async {
        if let request = imageDetailInfo {
            let id = request.idImageDetail
            var blurLevel = Int(blur * 10)
            if blurLevel < 1 {
                blurLevel = 1
            } else if blur > 10 {
                blurLevel = 10
            }
            let url = ImageLoaderManager.shared.getURLBlurImage(id: id, blur: blurLevel)
            do {
                let imageBlur = try await worker.loadImageBlur(url: url)
                self.presenter?.presentGetBlurImage(imageBlur: imageBlur)
            } catch {
                print(error.localizedDescription) // Output: "My error message"
            }

        }
        
    }
    
    func getGrayScaleImage() async {
        if let request = imageDetailInfo {
            let id = request.idImageDetail
            let url = ImageLoaderManager.shared.getURLGrayScaleImage(id: id)
            do {
                let imageGrayScale = try await worker.loadImageGrayScale(url: url)
                self.presenter?.presentGetGrayScaleImage(imageGrayScale: imageGrayScale)
            } catch {
                print(error.localizedDescription) // Output: "My error message"
            }
        }
    }
}
