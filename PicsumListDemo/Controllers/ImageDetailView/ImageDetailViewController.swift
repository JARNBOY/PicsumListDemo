//
//  ImageDetailViewController.swift
//  PicsumListDemo
//
//  Created by Papon Supamongkonchai on 24/4/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ImageDetailDisplayLogic: AnyObject
{
    func displayGetImageDetail(viewModel: ImageDetail.GetDetailDisplay.ViewModel)
}

class ImageDetailViewController: UIViewController, ImageDetailDisplayLogic
{
    
    @IBOutlet weak var detailImageView: UIImageView!
    @IBOutlet weak var blurSlider: UISlider!
    @IBOutlet weak var lblAuthor: UILabel!
    @IBOutlet weak var descTextView: UITextView!
    @IBOutlet weak var typeSegment: UISegmentedControl!
    
    var interactor: ImageDetailBusinessLogic?
    var router: (NSObjectProtocol & ImageDetailRoutingLogic & ImageDetailDataPassing)?
    
    // MARK: Object lifecycle
    override func awakeFromNib() {
        super.awakeFromNib()
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = ImageDetailInteractor()
        let presenter = ImageDetailPresenter()
        let router = ImageDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getImageDetail()
    }
    
    // MARK: Function
    func getImageDetail() {
        interactor?.getImageDetail()
    }
    
    // MARK: ImageDetailDisplayLogic
    func displayGetImageDetail(viewModel: ImageDetail.GetDetailDisplay.ViewModel) {
        self.detailImageView.image = UIImage(data: viewModel.imageData)
        self.lblAuthor.text = viewModel.author
        self.descTextView.text = viewModel.desc
    }
}
